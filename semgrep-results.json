{"version":"1.135.0","results":[{"check_id":"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","path":"app.js","start":{"line":9,"col":7,"offset":247},"end":{"line":9,"col":22,"offset":262},"extra":{"metavars":{"$APP":{"start":{"line":9,"col":7,"offset":247},"end":{"line":9,"col":10,"offset":250},"abstract_content":"app"},"$EXPRESS":{"start":{"line":9,"col":13,"offset":253},"end":{"line":9,"col":20,"offset":260},"abstract_content":"express"}},"message":"A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.","metadata":{"category":"security","references":["https://www.npmjs.com/package/csurf","https://www.npmjs.com/package/csrf","https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"],"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"technology":["javascript","typescript","express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","shortlink":"https://sg.run/BxzR","semgrep.dev":{"rule":{"origin":"community","r_id":22551,"rule_id":"wdUKEq","rule_name":"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","rv_id":945789,"url":"https://semgrep.dev/playground/r/NdTqkvB/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","version_id":"NdTqkvB"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage"},"severity":"INFO","fingerprint":"0ca2ac6b959f7c5907d739b98e5b297c8c2abb85c1aa4bb6d35f9009eedb0bce0fbdc8deef3d6adc336f5ebe0a5ff3152dc52621edc463f7501b3e44c6db188e_0","lines":"const app = express();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"javascript.express.web.cors-permissive-express.cors-permissive-express","path":"app.js","start":{"line":14,"col":14,"offset":378},"end":{"line":14,"col":29,"offset":393},"extra":{"metavars":{"$1":{"start":{"line":1,"col":2,"offset":1},"end":{"line":1,"col":3,"offset":2},"abstract_content":"*"},"$CORS":{"start":{"line":14,"col":9,"offset":373},"end":{"line":14,"col":13,"offset":377},"abstract_content":"cors","propagated_value":{"svalue_start":{"line":6,"col":14,"offset":191},"svalue_end":{"line":6,"col":29,"offset":206},"svalue_abstract_content":"require('cors')"}},"$OPTS":{"start":{"line":14,"col":14,"offset":378},"end":{"line":14,"col":29,"offset":393},"abstract_content":"{origin'*'}"},"$ORIGIN":{"start":{"line":14,"col":24,"offset":388},"end":{"line":14,"col":27,"offset":391},"abstract_content":"'*'"}},"message":"A permissive Cross-Origin Resource Sharing (CORS) vulnerability occurs when a server's CORS policy allows any origin to access its resources or improperly validates allowed origins. This can enable attackers to make unauthorized cross-origin requests, potentially exposing sensitive data to malicious websites. Avoid using wildcard (*) origins, especially for endpoints that handle sensitive data. Use a restrictive CORS policy by explicitly specifying trusted origins in the Access-Control-Allow-Origin header.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-346: Origin Validation Error"],"display-name":"CORS Misconfiguration with Express","functional-categories":["web::sink::header::cors"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"technology":["cors","express"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/javascript.express.web.cors-permissive-express.cors-permissive-express","shortlink":"https://sg.run/0oKpJ","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":150910,"rule_id":"zdUK75J","rule_name":"javascript.express.web.cors-permissive-express.cors-permissive-express","rv_id":1029142,"url":"https://semgrep.dev/playground/r/K3TjzB6/javascript.express.web.cors-permissive-express.cors-permissive-express","version_id":"K3TjzB6"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.web.cors-permissive-express.cors-permissive-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"e7e0086f77085690609119ae08c0ef14a6db126ad9e28ed936402fd9478383615e0fc4ff43ddce7f9d40b0d108f93eee6b624fdeee5a630c25f9bba2ff1302bb_0","lines":"app.use(cors({ origin: '*' })); // Vulnerable: Permissive CORS","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":14,"col":14,"offset":378},"end":{"line":14,"col":29,"offset":393}},"{ origin: '*' }"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":14,"col":14,"offset":378},"end":{"line":14,"col":29,"offset":393}},"{ origin: '*' }"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"app.js","start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$APP":{"start":{"line":32,"col":1,"offset":881},"end":{"line":32,"col":4,"offset":884},"abstract_content":"app","propagated_value":{"svalue_start":{"line":9,"col":13,"offset":253},"svalue_end":{"line":9,"col":22,"offset":262},"svalue_abstract_content":"express()"}},"$METHOD":{"start":{"line":32,"col":5,"offset":885},"end":{"line":32,"col":8,"offset":888},"abstract_content":"get"},"$RES":{"start":{"line":32,"col":24,"offset":904},"end":{"line":32,"col":27,"offset":907},"abstract_content":"res"},"$REQ":{"start":{"line":33,"col":21,"offset":934},"end":{"line":33,"col":24,"offset":937},"abstract_content":"req"},"$ARG":{"start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018},"abstract_content":"`<h1>User said: userInput</h1>"}},"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl","semgrep.dev":{"rule":{"origin":"community","r_id":9277,"rule_id":"3qUPA1","rule_name":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","rv_id":945811,"url":"https://semgrep.dev/playground/r/RGTAgNy/javascript.express.security.audit.xss.direct-response-write.direct-response-write","version_id":"RGTAgNy"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"4d37e2f3ceb327db34d047cf16f65a5e0986af28a3bed47452270b0ee0ad86f87c0c15ceb96988165c43db616c08268b38598e784f52667fdb6df31aedbfc3bb_0","lines":"  res.send(`<h1>User said: ${userInput}</h1>`); // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":33,"col":21,"offset":934},"end":{"line":33,"col":30,"offset":943}},"req.query"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":33,"col":9,"offset":922},"end":{"line":33,"col":18,"offset":931}},"content":"userInput"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018}},"`<h1>User said: ${userInput}</h1>"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.security.injection.raw-html-format.raw-html-format","path":"app.js","start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$APP":{"start":{"line":32,"col":1,"offset":881},"end":{"line":32,"col":4,"offset":884},"abstract_content":"app","propagated_value":{"svalue_start":{"line":9,"col":13,"offset":253},"svalue_end":{"line":9,"col":22,"offset":262},"svalue_abstract_content":"express()"}},"$METHOD":{"start":{"line":32,"col":5,"offset":885},"end":{"line":32,"col":8,"offset":888},"abstract_content":"get"},"$RES":{"start":{"line":32,"col":24,"offset":904},"end":{"line":32,"col":27,"offset":907},"abstract_content":"res"},"$REQ":{"start":{"line":33,"col":21,"offset":934},"end":{"line":33,"col":24,"offset":937},"abstract_content":"req"}},"message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format","shortlink":"https://sg.run/5DO3","semgrep.dev":{"rule":{"origin":"community","r_id":14691,"rule_id":"5rUL0X","rule_name":"javascript.express.security.injection.raw-html-format.raw-html-format","rv_id":945836,"url":"https://semgrep.dev/playground/r/xyTqnbZ/javascript.express.security.injection.raw-html-format.raw-html-format","version_id":"xyTqnbZ"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"da5702cc1971e306e49635287a94cb8ff5f333dae1e6df114f6ff17df5bdefdee9e39709cb364efb203adcf1c017a073ba6b64599056e7650adfb180cfcc2a40_0","lines":"  res.send(`<h1>User said: ${userInput}</h1>`); // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":33,"col":21,"offset":934},"end":{"line":33,"col":30,"offset":943}},"req.query"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":33,"col":9,"offset":922},"end":{"line":33,"col":18,"offset":931}},"content":"userInput"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018}},"`<h1>User said: ${userInput}</h1>"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","path":"app.js","start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018},"extra":{"metavars":{"$REQ":{"start":{"line":33,"col":21,"offset":934},"end":{"line":33,"col":24,"offset":937},"abstract_content":"req"},"$RES":{"start":{"line":34,"col":3,"offset":976},"end":{"line":34,"col":6,"offset":979},"abstract_content":"res"},"$SINK":{"start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018},"abstract_content":"`<h1>User said: userInput</h1>"},"$X":{"start":{"line":34,"col":30,"offset":1003},"end":{"line":34,"col":39,"offset":1012},"abstract_content":"userInput","propagated_value":{"svalue_start":{"line":33,"col":21,"offset":934},"svalue_end":{"line":33,"col":59,"offset":972},"svalue_abstract_content":"req.query.input||'No input provided'"}}},"message":"Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","category":"security","subcategory":["audit"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"cwe2020-top25":true,"cwe2021-top25":true,"cwe2022-top25":true,"display-name":"Cross-Site Scripting (XSS) with Express","functional-categories":["web::sink::html-webpage::express","web::sink::http-response::express","web::source::cookie::express","web::source::form-data::express","web::source::header::express","web::source::http-body::express","web::source::url-path-params::express","web::source::url-query-string::express"],"owasp":["A03:2021 - Injection","A07:2017 - Cross-Site Scripting (XSS)"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"supersedes":["javascript.express.direct-response-write-with-header.direct-response-write-with-header"],"technology":["express","nodejs","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","shortlink":"https://sg.run/zdElz","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":146161,"rule_id":"6JUvBAo","rule_name":"javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","rv_id":1041990,"url":"https://semgrep.dev/playground/r/e1T1ZD2/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","version_id":"e1T1ZD2"},"src":"new-rule"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"e69f0358ce5c4c895e3ead53a5ae91db4a8ed7db010c5b82ccc1803e08ac912fb6b69b991de128054a57470a73e3648eda9e6be8613beea2233d83ca33026123_0","lines":"  res.send(`<h1>User said: ${userInput}</h1>`); // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":33,"col":21,"offset":934},"end":{"line":33,"col":24,"offset":937}},"req"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":33,"col":9,"offset":922},"end":{"line":33,"col":18,"offset":931}},"content":"userInput"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":34,"col":12,"offset":985},"end":{"line":34,"col":45,"offset":1018}},"`<h1>User said: ${userInput}</h1>"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.web.cookies-default-express.cookies-default-express","path":"app.js","start":{"line":39,"col":3,"offset":1118},"end":{"line":39,"col":33,"offset":1148},"extra":{"metavars":{"$REQ":{"start":{"line":38,"col":25,"offset":1101},"end":{"line":38,"col":28,"offset":1104},"abstract_content":"req"},"$RES":{"start":{"line":39,"col":3,"offset":1118},"end":{"line":39,"col":6,"offset":1121},"abstract_content":"res"},"$KEY":{"start":{"line":39,"col":14,"offset":1129},"end":{"line":39,"col":23,"offset":1138},"abstract_content":"'session'"},"$VALUE":{"start":{"line":39,"col":25,"offset":1140},"end":{"line":39,"col":32,"offset":1147},"abstract_content":"'12345'"}},"message":"Having default cookie settings is insecure because they often lack critical security attributes, leaving cookies vulnerable to various attacks like CSRF or XSS. Always configure cookies with security attributes: `HttpOnly`, `Secure`, `SameSite`.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["secure default"],"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"cwe2020-top25":true,"cwe2021-top25":true,"display-name":"Default Cookie Settings in Express","functional-categories":["web::search::cookie-config::express"],"references":["https://cwe.mitre.org/data/definitions/732.html","https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes"],"technology":["express"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/javascript.express.web.cookies-default-express.cookies-default-express","shortlink":"https://sg.run/JDG5Z","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":150902,"rule_id":"WAUW4bA","rule_name":"javascript.express.web.cookies-default-express.cookies-default-express","rv_id":973749,"url":"https://semgrep.dev/playground/r/0bT1qOB/javascript.express.web.cookies-default-express.cookies-default-express","version_id":"0bT1qOB"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.web.cookies-default-express.cookies-default-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"7a682d7092c783b854fa9dcb7d999256d46373fcfb560fe3ed93e6750d44b3c07b4abfccdef420f2d65e3316e4084d8a5eb1fbc6709a6433388ad96822027f4f_0","lines":"  res.cookie('session', '12345'); // Unsafe: No flags","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"javascript.express.express-child-process.express-child-process","path":"app.js","start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"exec"},"$REQ":{"start":{"line":51,"col":19,"offset":1466},"end":{"line":51,"col":22,"offset":1469},"abstract_content":"req"},"$EXEC":{"start":{"line":52,"col":3,"offset":1491},"end":{"line":52,"col":7,"offset":1495},"abstract_content":"exec"},"$CMD":{"start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503},"abstract_content":"userCmd","propagated_value":{"svalue_start":{"line":51,"col":19,"offset":1466},"svalue_end":{"line":51,"col":40,"offset":1487},"svalue_abstract_content":"req.query.cmd||'ls'"}}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. For more information, see [Command injection prevention for JavaScript ](https://semgrep.dev/docs/cheat-sheets/javascript-command-injection/).","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"MEDIUM","interfile":true,"category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::express","web::source::http-params::express","web::source::http-body::express","web::source::header::express","web::source::url-path-params::express","os::sink::os-command-or-thread:nodejs.child_process"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Nodejs_Security_Cheat_Sheet.html#do-not-use-dangerous-functions"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js","technology":["javascript","express","nodejs"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/javascript.express.express-child-process.express-child-process","shortlink":"https://sg.run/9p1R","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":28867,"rule_id":"L1Uk12","rule_name":"javascript.express.express-child-process.express-child-process","rv_id":1014898,"url":"https://semgrep.dev/playground/r/DkTNOG5/javascript.express.express-child-process.express-child-process","version_id":"DkTNOG5"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.express-child-process.express-child-process","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"CRITICAL","fingerprint":"093d9b7b6a0f80ccde3cf6e3a05cb1f0bd9dc7dc6bab9db427acdc230c7859862e33c8ee2c02a506495c11b0afca1c5da34ecb16b63d9db01a3dcb7ddf0b4069_0","lines":"  exec(userCmd, (error, stdout, stderr) => { // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":51,"col":19,"offset":1466},"end":{"line":51,"col":28,"offset":1475}},"req.query"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":51,"col":9,"offset":1456},"end":{"line":51,"col":16,"offset":1463}},"content":"userCmd"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503}},"userCmd"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.os.tainted-os-command-child-process-express.tainted-os-command-child-process-express","path":"app.js","start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503},"extra":{"metavars":{"$REQ":{"start":{"line":51,"col":19,"offset":1466},"end":{"line":51,"col":22,"offset":1469},"abstract_content":"req"},"$CHILD_PROCESS":{"start":{"line":52,"col":3,"offset":1491},"end":{"line":52,"col":7,"offset":1495},"abstract_content":"exec"},"$SINK":{"start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503},"abstract_content":"userCmd","propagated_value":{"svalue_start":{"line":51,"col":19,"offset":1466},"svalue_end":{"line":51,"col":40,"offset":1487},"svalue_abstract_content":"req.query.cmd||'ls'"}}},"message":"Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the input, and use safe methods for executing the commands. For more information, see: [JavaScript command injection prevention](https://semgrep.dev/docs/cheat-sheets/javascript-command-injection/)","metadata":{"likelihood":"MEDIUM","impact":"HIGH","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"cwe2020-top25":true,"cwe2021-top25":true,"cwe2022-top25":true,"display-name":"OS Command Injection in Express with Child Process","functional-categories":["os::sink::command::child-process","web::source::cookie::express","web::source::form-data::express","web::source::header::express","web::source::http-body::express","web::source::url-path-params::express","web::source::url-query-string::express"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"supersedes":["javascript.lang.security.audit.dangerous-spawn-shell","javascript.lang.security.audit.spawn-shell-true","javascript.lang.security.detect-child-process","javascript.lang.security.spawn-git-clone","javascript.lang.security.spawn-shell-true"],"technology":["express","nodejs","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/javascript.express.os.tainted-os-command-child-process-express.tainted-os-command-child-process-express","shortlink":"https://sg.run/AbAz6","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":147650,"rule_id":"JDUN8D0","rule_name":"javascript.express.os.tainted-os-command-child-process-express.tainted-os-command-child-process-express","rv_id":1041987,"url":"https://semgrep.dev/playground/r/w8TnkAq/javascript.express.os.tainted-os-command-child-process-express.tainted-os-command-child-process-express","version_id":"w8TnkAq"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.os.tainted-os-command-child-process-express.tainted-os-command-child-process-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"ERROR","fingerprint":"335b6936cda41c11c4b24b3a47b2f92515d847da96ecc0e88cd21db81969397ee241a72a32ff344c8128e24ca4ce402379a623e8a5b4fb827ff56782651b4364_0","lines":"  exec(userCmd, (error, stdout, stderr) => { // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":51,"col":19,"offset":1466},"end":{"line":51,"col":22,"offset":1469}},"req"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":51,"col":9,"offset":1456},"end":{"line":51,"col":16,"offset":1463}},"content":"userCmd"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503}},"userCmd"]]},"engine_kind":"PRO"}},{"check_id":"javascript.lang.security.detect-child-process.detect-child-process","path":"app.js","start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503},"extra":{"metavars":{"$FUNC":{"start":{"line":50,"col":22,"offset":1433},"end":{"line":50,"col":25,"offset":1436},"abstract_content":"req"},"$CMD":{"start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503},"abstract_content":"userCmd","propagated_value":{"svalue_start":{"line":51,"col":19,"offset":1466},"svalue_end":{"line":51,"col":40,"offset":1487},"svalue_abstract_content":"req.query.cmd||'ls'"}}},"message":"Detected calls to child_process from a function argument `req`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ","metadata":{"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Nodejs_Security_Cheat_Sheet.html#do-not-use-dangerous-functions"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js","category":"security","technology":["javascript"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/javascript.lang.security.detect-child-process.detect-child-process","shortlink":"https://sg.run/l2lo","semgrep.dev":{"rule":{"origin":"community","r_id":9313,"rule_id":"10UKNB","rule_name":"javascript.lang.security.detect-child-process.detect-child-process","rv_id":945887,"url":"https://semgrep.dev/playground/r/yeT0n95/javascript.lang.security.detect-child-process.detect-child-process","version_id":"yeT0n95"},"src":"unchanged"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":213067,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/javascript.lang.security.detect-child-process.detect-child-process","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"ERROR","fingerprint":"80f62b610e9998d58cc09c44c45faec860953b3ac0c4d4d810284ba7b29332c3f4c1abeae804c8a6f041f3ec45b7bd56285c7d9e8aa720e1a46504140019867f_0","lines":"  exec(userCmd, (error, stdout, stderr) => { // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":50,"col":22,"offset":1433},"end":{"line":50,"col":25,"offset":1436}},"req"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":50,"col":22,"offset":1433},"end":{"line":50,"col":25,"offset":1436}},"content":"req"},{"location":{"path":"app.js","start":{"line":51,"col":9,"offset":1456},"end":{"line":51,"col":16,"offset":1463}},"content":"userCmd"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":52,"col":8,"offset":1496},"end":{"line":52,"col":15,"offset":1503}},"userCmd"]]},"engine_kind":"PRO"}},{"check_id":"javascript.browser.security.eval-detected.eval-detected","path":"app.js","start":{"line":64,"col":18,"offset":1771},"end":{"line":64,"col":32,"offset":1785},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing","section":"V5 Validation, Sanitization and Encoding","version":"4"},"category":"security","technology":["browser"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected","shortlink":"https://sg.run/7ope","semgrep.dev":{"rule":{"origin":"community","r_id":9238,"rule_id":"GdU7dw","rule_name":"javascript.browser.security.eval-detected.eval-detected","rv_id":945778,"url":"https://semgrep.dev/playground/r/o5TZePx/javascript.browser.security.eval-detected.eval-detected","version_id":"o5TZePx"},"src":"unchanged"},"dev.semgrep.actions":["monitor"],"semgrep.policy":{"id":213067,"name":"Rule Board - Audit column","slug":"rule-board-audit"},"semgrep.url":"https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected","semgrep.ruleset":"default","semgrep.ruleset_id":3471},"severity":"WARNING","fingerprint":"1af26b199f555006c23fa15310026b6f31c3553b594b1a3afc3aef4a08f9763e0e83f27c7bb4273b8658fda3517b78a63772d9a2b558798d6c3b7be52cc02ecf_0","lines":"  const result = eval(userExpr); // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"PRO"}},{"check_id":"javascript.lang.security.audit.code-string-concat.code-string-concat","path":"app.js","start":{"line":64,"col":18,"offset":1771},"end":{"line":64,"col":32,"offset":1785},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$APP":{"start":{"line":62,"col":1,"offset":1675},"end":{"line":62,"col":4,"offset":1678},"abstract_content":"app","propagated_value":{"svalue_start":{"line":9,"col":13,"offset":253},"svalue_end":{"line":9,"col":22,"offset":262},"svalue_abstract_content":"express()"}},"$METHOD":{"start":{"line":62,"col":5,"offset":1679},"end":{"line":62,"col":8,"offset":1682},"abstract_content":"get"},"$RES":{"start":{"line":62,"col":24,"offset":1698},"end":{"line":62,"col":27,"offset":1701},"abstract_content":"res"},"$REQ":{"start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":23,"offset":1730},"abstract_content":"req"}},"message":"Found data from an Express or Next web request flowing to `eval`. If this data is user-controllable this can lead to execution of arbitrary system commands in the context of your application process. Avoid `eval` whenever possible.","metadata":{"interfile":true,"confidence":"HIGH","owasp":["A03:2021 - Injection"],"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"references":["https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval","https://nodejs.org/api/child_process.html#child_processexeccommand-options-callback","https://www.stackhawk.com/blog/nodejs-command-injection-examples-and-prevention/","https://ckarande.gitbooks.io/owasp-nodegoat-tutorial/content/tutorial/a1_-_server_side_js_injection.html"],"category":"security","technology":["node.js","Express","Next.js"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.code-string-concat.code-string-concat","shortlink":"https://sg.run/96Yk","semgrep.dev":{"rule":{"origin":"community","r_id":13023,"rule_id":"DbUKEz","rule_name":"javascript.lang.security.audit.code-string-concat.code-string-concat","rv_id":945866,"url":"https://semgrep.dev/playground/r/5PT9Ol5/javascript.lang.security.audit.code-string-concat.code-string-concat","version_id":"5PT9Ol5"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.lang.security.audit.code-string-concat.code-string-concat","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"ERROR","fingerprint":"3fba7dd8fdbf96931606c6dfc8ad66d9b365a300885336b0dd8e681f2ec8f36955a7bbd19a0ce80fbd0b3bb127602503a0757666f2a48b328d67ed78e8de8d96_0","lines":"  const result = eval(userExpr); // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":29,"offset":1736}},"req.query"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":63,"col":9,"offset":1716},"end":{"line":63,"col":17,"offset":1724}},"content":"userExpr"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":64,"col":18,"offset":1771},"end":{"line":64,"col":32,"offset":1785}},"eval(userExpr)"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.code.eval-express.eval-express","path":"app.js","start":{"line":64,"col":23,"offset":1776},"end":{"line":64,"col":31,"offset":1784},"extra":{"metavars":{"$REQ":{"start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":23,"offset":1730},"abstract_content":"req"},"$SINK":{"start":{"line":64,"col":23,"offset":1776},"end":{"line":64,"col":31,"offset":1784},"abstract_content":"userExpr","propagated_value":{"svalue_start":{"line":63,"col":20,"offset":1727},"svalue_end":{"line":63,"col":45,"offset":1752},"svalue_abstract_content":"req.query.expr||'1 + 1'"}}},"message":"The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-94: Improper Control of Generation of Code ('Code Injection')"],"cwe2020-top25":true,"cwe2022-top25":true,"display-name":"Code Injection with Express","functional-categories":["code::sink::eval::nodejs","web::source::cookie::express","web::source::form-data::express","web::source::header::express","web::source::http-body::express","web::source::url-path-params::express","web::source::url-query-string::express"],"owasp":["A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"technology":["express","nodejs","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/javascript.express.code.eval-express.eval-express","shortlink":"https://sg.run/Pe0WE","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":150901,"rule_id":"DbU6rQ4","rule_name":"javascript.express.code.eval-express.eval-express","rv_id":1041952,"url":"https://semgrep.dev/playground/r/7ZTobWk/javascript.express.code.eval-express.eval-express","version_id":"7ZTobWk"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.code.eval-express.eval-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"CRITICAL","fingerprint":"0987dba8251c9ec2e049a2e9e639ef3bbd50c931e2eabd0e285bd324b5b6408b5ef1eed8e61ad28e4052ce264268d4940446f0ffb176754714c3b03de401666c_0","lines":"  const result = eval(userExpr); // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":23,"offset":1730}},"req"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":63,"col":9,"offset":1716},"end":{"line":63,"col":17,"offset":1724}},"content":"userExpr"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":64,"col":23,"offset":1776},"end":{"line":64,"col":31,"offset":1784}},"userExpr"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"app.js","start":{"line":65,"col":12,"offset":1808},"end":{"line":65,"col":29,"offset":1825},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$APP":{"start":{"line":62,"col":1,"offset":1675},"end":{"line":62,"col":4,"offset":1678},"abstract_content":"app","propagated_value":{"svalue_start":{"line":9,"col":13,"offset":253},"svalue_end":{"line":9,"col":22,"offset":262},"svalue_abstract_content":"express()"}},"$METHOD":{"start":{"line":62,"col":5,"offset":1679},"end":{"line":62,"col":8,"offset":1682},"abstract_content":"get"},"$RES":{"start":{"line":62,"col":24,"offset":1698},"end":{"line":62,"col":27,"offset":1701},"abstract_content":"res"},"$REQ":{"start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":23,"offset":1730},"abstract_content":"req"},"$ARG":{"start":{"line":65,"col":12,"offset":1808},"end":{"line":65,"col":29,"offset":1825},"abstract_content":"`Result: result"}},"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl","semgrep.dev":{"rule":{"origin":"community","r_id":9277,"rule_id":"3qUPA1","rule_name":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","rv_id":945811,"url":"https://semgrep.dev/playground/r/RGTAgNy/javascript.express.security.audit.xss.direct-response-write.direct-response-write","version_id":"RGTAgNy"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"699f49a28255b48ca51ef020139d055017f819bab71ac641e2454f16764469545879baff65fe1c71ddc4c4e52198f1fc9aee76734236a23a9cc06cd46cf1f6b3_0","lines":"  res.send(`Result: ${result}`);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":29,"offset":1736}},"req.query"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":63,"col":9,"offset":1716},"end":{"line":63,"col":17,"offset":1724}},"content":"userExpr"},{"location":{"path":"app.js","start":{"line":64,"col":18,"offset":1771},"end":{"line":64,"col":22,"offset":1775}},"content":"eval"},{"location":{"path":"app.js","start":{"line":64,"col":9,"offset":1762},"end":{"line":64,"col":15,"offset":1768}},"content":"result"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":65,"col":12,"offset":1808},"end":{"line":65,"col":29,"offset":1825}},"`Result: ${result"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","path":"app.js","start":{"line":65,"col":12,"offset":1808},"end":{"line":65,"col":29,"offset":1825},"extra":{"metavars":{"$REQ":{"start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":23,"offset":1730},"abstract_content":"req"},"$RES":{"start":{"line":65,"col":3,"offset":1799},"end":{"line":65,"col":6,"offset":1802},"abstract_content":"res"},"$SINK":{"start":{"line":65,"col":12,"offset":1808},"end":{"line":65,"col":29,"offset":1825},"abstract_content":"`Result: result"},"$X":{"start":{"line":65,"col":23,"offset":1819},"end":{"line":65,"col":29,"offset":1825},"abstract_content":"result","propagated_value":{"svalue_start":{"line":64,"col":18,"offset":1771},"svalue_end":{"line":64,"col":32,"offset":1785},"svalue_abstract_content":"eval(userExpr)"}}},"message":"Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","category":"security","subcategory":["audit"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"cwe2020-top25":true,"cwe2021-top25":true,"cwe2022-top25":true,"display-name":"Cross-Site Scripting (XSS) with Express","functional-categories":["web::sink::html-webpage::express","web::sink::http-response::express","web::source::cookie::express","web::source::form-data::express","web::source::header::express","web::source::http-body::express","web::source::url-path-params::express","web::source::url-query-string::express"],"owasp":["A03:2021 - Injection","A07:2017 - Cross-Site Scripting (XSS)"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"supersedes":["javascript.express.direct-response-write-with-header.direct-response-write-with-header"],"technology":["express","nodejs","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","shortlink":"https://sg.run/zdElz","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":146161,"rule_id":"6JUvBAo","rule_name":"javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","rv_id":1041990,"url":"https://semgrep.dev/playground/r/e1T1ZD2/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","version_id":"e1T1ZD2"},"src":"new-rule"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"f60f118db3bad919685b3c18b6ff8e469ccf05ae5111f65b8e3aba57cd4061e2d8ce29b7c5d44f63816c6f35c168dae9f35703932a619442842658b06025ac85_0","lines":"  res.send(`Result: ${result}`);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":63,"col":20,"offset":1727},"end":{"line":63,"col":23,"offset":1730}},"req"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":63,"col":9,"offset":1716},"end":{"line":63,"col":17,"offset":1724}},"content":"userExpr"},{"location":{"path":"app.js","start":{"line":64,"col":18,"offset":1771},"end":{"line":64,"col":22,"offset":1775}},"content":"eval"},{"location":{"path":"app.js","start":{"line":64,"col":9,"offset":1762},"end":{"line":64,"col":15,"offset":1768}},"content":"result"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":65,"col":12,"offset":1808},"end":{"line":65,"col":29,"offset":1825}},"`Result: ${result"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.db.mysql-express.mysql-express","path":"app.js","start":{"line":73,"col":3,"offset":2082},"end":{"line":73,"col":13,"offset":2092},"extra":{"metavars":{"$REQ":{"start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":21,"offset":1935},"abstract_content":"req"},"$SINK":{"start":{"line":71,"col":17,"offset":1969},"end":{"line":71,"col":57,"offset":2009},"abstract_content":"`SELECT * FROM users WHERE id = userId"},"$MYSQL":{"start":{"line":72,"col":22,"offset":2044},"end":{"line":72,"col":27,"offset":2049},"abstract_content":"mysql"},"$DB":{"start":{"line":73,"col":3,"offset":2082},"end":{"line":73,"col":13,"offset":2092},"abstract_content":"connection","propagated_value":{"svalue_start":{"line":72,"col":22,"offset":2044},"svalue_end":{"line":72,"col":48,"offset":2070},"svalue_abstract_content":"mysql.createConnection({})"}}},"message":"Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"cwe2020-top25":true,"cwe2021-top25":true,"cwe2022-top25":true,"display-name":"SQL Injection in MySQL with Express","functional-categories":["db::sink::query::mysql","db::sink::query::mysql2","web::source::cookie::express","web::source::form-data::express","web::source::header::express","web::source::http-body::express","web::source::url-path-params::express","web::source::url-query-string::express"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://github.com/mysqljs/mysql?tab=readme-ov-file#escaping-query-values","https://owasp.org/Top10/A03_2021-Injection"],"supersedes":["javascript.express.mysql.express-mysql-sqli.express-mysql-sqli"],"technology":["db","express","mysql","mysql2","mysql2/promise","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.express.db.mysql-express.mysql-express","shortlink":"https://sg.run/5r7Al","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":147647,"rule_id":"3qUkyOG","rule_name":"javascript.express.db.mysql-express.mysql-express","rv_id":1041961,"url":"https://semgrep.dev/playground/r/5PTANp6/javascript.express.db.mysql-express.mysql-express","version_id":"5PTANp6"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.db.mysql-express.mysql-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"CRITICAL","fingerprint":"19d137e0d1c1eda86ba23d06a0140391d96570d1820ce57ae381e320658f888c17557c47a2fdea94fa18ca81b46317c345b7bc8dfec4d61c986565a462ba51bc_0","lines":"  connection.query(query, (err, results) => { // Unsafe","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":21,"offset":1935}},"req"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":70,"col":9,"offset":1923},"end":{"line":70,"col":15,"offset":1929}},"content":"userId"},{"location":{"path":"app.js","start":{"line":71,"col":17,"offset":1969},"end":{"line":71,"col":18,"offset":1970}},"content":"`"},{"location":{"path":"app.js","start":{"line":71,"col":9,"offset":1961},"end":{"line":71,"col":14,"offset":1966}},"content":"query"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":73,"col":3,"offset":2082},"end":{"line":73,"col":13,"offset":2092}},"connection"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.mysql.express-mysql-sqli.express-mysql-sqli","path":"app.js","start":{"line":73,"col":3,"offset":2082},"end":{"line":75,"col":5,"offset":2173},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":6,"offset":5},"abstract_content":"query"},"$IMPORT":{"start":{"line":7,"col":24,"offset":231},"end":{"line":7,"col":29,"offset":236},"abstract_content":"mysql"},"$APP":{"start":{"line":69,"col":1,"offset":1883},"end":{"line":69,"col":4,"offset":1886},"abstract_content":"app","propagated_value":{"svalue_start":{"line":9,"col":13,"offset":253},"svalue_end":{"line":9,"col":22,"offset":262},"svalue_abstract_content":"express()"}},"$METHOD":{"start":{"line":69,"col":5,"offset":1887},"end":{"line":69,"col":8,"offset":1890},"abstract_content":"get"},"$RES":{"start":{"line":69,"col":23,"offset":1905},"end":{"line":69,"col":26,"offset":1908},"abstract_content":"res"},"$REQ":{"start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":21,"offset":1935},"abstract_content":"req"},"$MYSQL":{"start":{"line":72,"col":22,"offset":2044},"end":{"line":72,"col":27,"offset":2049},"abstract_content":"mysql"},"$X":{"start":{"line":73,"col":3,"offset":2082},"end":{"line":73,"col":13,"offset":2092},"abstract_content":"connection","propagated_value":{"svalue_start":{"line":72,"col":22,"offset":2044},"svalue_end":{"line":72,"col":48,"offset":2070},"svalue_abstract_content":"mysql.createConnection({})"}},"$QUERY":{"start":{"line":73,"col":14,"offset":2093},"end":{"line":73,"col":19,"offset":2098},"abstract_content":"query"}},"message":"Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions.","metadata":{"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","interfile":true,"category":"security","subcategory":["vuln"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"cwe2021-top25":true,"cwe2022-top25":true,"functional-categories":["web::source::cookie::express","web::source::http-params::express","web::source::http-body::express","web::source::header::express","web::source::url-path-params::express","db::sink::sql-or-nosql-query::mysql","db::sink::sql-or-nosql-query::mysql2"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"],"technology":["express"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.express.mysql.express-mysql-sqli.express-mysql-sqli","shortlink":"https://sg.run/306W","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":28087,"rule_id":"0oUKZo","rule_name":"javascript.express.mysql.express-mysql-sqli.express-mysql-sqli","rv_id":1014901,"url":"https://semgrep.dev/playground/r/K3TJprl/javascript.express.mysql.express-mysql-sqli.express-mysql-sqli","version_id":"K3TJprl"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.mysql.express-mysql-sqli.express-mysql-sqli","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"CRITICAL","fingerprint":"bed23ba893a1010d60650bed620dc15421987e67c1189dc02edf4ea0fd477fae8c1cba3f80de8161a77ad689704a2250c35e559603f3cfe4a1ad9fabcc6215e8_0","lines":"  connection.query(query, (err, results) => { // Unsafe\n    res.send(`Query: ${query}`);\n  });","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":27,"offset":1941}},"req.query"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":70,"col":9,"offset":1923},"end":{"line":70,"col":15,"offset":1929}},"content":"userId"},{"location":{"path":"app.js","start":{"line":71,"col":17,"offset":1969},"end":{"line":71,"col":18,"offset":1970}},"content":"`"},{"location":{"path":"app.js","start":{"line":71,"col":9,"offset":1961},"end":{"line":71,"col":14,"offset":1966}},"content":"query"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":73,"col":3,"offset":2082},"end":{"line":75,"col":5,"offset":2173}},"connection.query(query, (err, results) => { // Unsafe\n    res.send(`Query: ${query}`);\n  })"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"app.js","start":{"line":74,"col":14,"offset":2149},"end":{"line":74,"col":29,"offset":2164},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$APP":{"start":{"line":69,"col":1,"offset":1883},"end":{"line":69,"col":4,"offset":1886},"abstract_content":"app","propagated_value":{"svalue_start":{"line":9,"col":13,"offset":253},"svalue_end":{"line":9,"col":22,"offset":262},"svalue_abstract_content":"express()"}},"$METHOD":{"start":{"line":69,"col":5,"offset":1887},"end":{"line":69,"col":8,"offset":1890},"abstract_content":"get"},"$RES":{"start":{"line":69,"col":23,"offset":1905},"end":{"line":69,"col":26,"offset":1908},"abstract_content":"res"},"$REQ":{"start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":21,"offset":1935},"abstract_content":"req"},"$ARG":{"start":{"line":74,"col":14,"offset":2149},"end":{"line":74,"col":29,"offset":2164},"abstract_content":"`Query: query"}},"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl","semgrep.dev":{"rule":{"origin":"community","r_id":9277,"rule_id":"3qUPA1","rule_name":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","rv_id":945811,"url":"https://semgrep.dev/playground/r/RGTAgNy/javascript.express.security.audit.xss.direct-response-write.direct-response-write","version_id":"RGTAgNy"},"src":"unchanged"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"63a45b60089d97c773ffa8522ae3c204d183af88c2c7d09fd8e841f844604dd802129c18cbd35ee2ce3292b048761049fc70fb752e3e43ce6650b38644cce995_0","lines":"    res.send(`Query: ${query}`);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":27,"offset":1941}},"req.query"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":70,"col":9,"offset":1923},"end":{"line":70,"col":15,"offset":1929}},"content":"userId"},{"location":{"path":"app.js","start":{"line":71,"col":17,"offset":1969},"end":{"line":71,"col":18,"offset":1970}},"content":"`"},{"location":{"path":"app.js","start":{"line":71,"col":9,"offset":1961},"end":{"line":71,"col":14,"offset":1966}},"content":"query"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":74,"col":14,"offset":2149},"end":{"line":74,"col":29,"offset":2164}},"`Query: ${query"]]},"engine_kind":"PRO"}},{"check_id":"javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","path":"app.js","start":{"line":74,"col":14,"offset":2149},"end":{"line":74,"col":29,"offset":2164},"extra":{"metavars":{"$REQ":{"start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":21,"offset":1935},"abstract_content":"req"},"$RES":{"start":{"line":74,"col":5,"offset":2140},"end":{"line":74,"col":8,"offset":2143},"abstract_content":"res"},"$SINK":{"start":{"line":74,"col":14,"offset":2149},"end":{"line":74,"col":29,"offset":2164},"abstract_content":"`Query: query"}},"message":"Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.","metadata":{"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","category":"security","subcategory":["audit"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"cwe2020-top25":true,"cwe2021-top25":true,"cwe2022-top25":true,"display-name":"Cross-Site Scripting (XSS) with Express","functional-categories":["web::sink::html-webpage::express","web::sink::http-response::express","web::source::cookie::express","web::source::form-data::express","web::source::header::express","web::source::http-body::express","web::source::url-path-params::express","web::source::url-query-string::express"],"owasp":["A03:2021 - Injection","A07:2017 - Cross-Site Scripting (XSS)"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"supersedes":["javascript.express.direct-response-write-with-header.direct-response-write-with-header"],"technology":["express","nodejs","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","shortlink":"https://sg.run/zdElz","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":146161,"rule_id":"6JUvBAo","rule_name":"javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","rv_id":1041990,"url":"https://semgrep.dev/playground/r/e1T1ZD2/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","version_id":"e1T1ZD2"},"src":"new-rule"},"dev.semgrep.actions":["block"],"semgrep.policy":{"id":213066,"name":"Rule Board - Block column","slug":"rule-board-block"},"semgrep.url":"https://semgrep.dev/r/javascript.express.web.tainted-direct-response-express.tainted-direct-response-express","semgrep.ruleset":"javascript","semgrep.ruleset_id":749},"severity":"WARNING","fingerprint":"5c234e9d9605a4b852c2dc705e263dc2e0a8e905d4200944dacdfa8320bad12dd4196cc03e0021600020e9105f2b6042810b292c396e0d4703056a57260692c8_0","lines":"    res.send(`Query: ${query}`);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"app.js","start":{"line":70,"col":18,"offset":1932},"end":{"line":70,"col":21,"offset":1935}},"req"]],"intermediate_vars":[{"location":{"path":"app.js","start":{"line":70,"col":9,"offset":1923},"end":{"line":70,"col":15,"offset":1929}},"content":"userId"},{"location":{"path":"app.js","start":{"line":71,"col":17,"offset":1969},"end":{"line":71,"col":18,"offset":1970}},"content":"`"},{"location":{"path":"app.js","start":{"line":71,"col":9,"offset":1961},"end":{"line":71,"col":14,"offset":1966}},"content":"query"}],"taint_sink":["CliLoc",[{"path":"app.js","start":{"line":74,"col":14,"offset":2149},"end":{"line":74,"col":29,"offset":2164}},"`Query: ${query"]]},"engine_kind":"PRO"}}],"errors":[],"paths":{"scanned":["app.js"]},"time":{"rules":[],"rules_parse_time":8.11023211479187,"profiling_times":{"config_time":25.95148015022278,"core_time":11.380433082580566,"ignores_time":0.020437955856323242,"total_time":37.40011405944824},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.0,"rules_selected_ratio":0.0,"rules_matched_ratio":0.0},"targets":[],"total_bytes":0,"max_memory_bytes":10105464384},"engine_requested":"PRO","interfile_languages_used":[],"skipped_rules":[]}